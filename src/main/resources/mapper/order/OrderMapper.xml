<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxw.store.project.order.mapper.OrderMapper">

    <resultMap id="OrderResult" type="Order">
        <id property="id" column="id"/>
        <result property="businessId" column="business_id"/>
        <result property="businessName" column="business_name"/>
        <result property="userId" column="user_id"/>
        <result property="code" column="order_code"/>
        <result property="price" column="price"/>
        <result property="originalPrice" column="original_price"/>
        <result property="expressPrice" column="express_price"/>
        <result property="expressId" column="express_id"/>
        <result property="expressCode" column="express_code"/>
        <result property="receiver" column="receiver"/>
        <result property="telphone" column="telphone"/>
        <result property="address" column="address"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="county" column="county"/>
        <result property="status" column="status"/>
        <result property="deleteFlag" column="delete_flag"/>
        <result property="createTime" column="created_at"/>
        <result property="payTime" column="pay_at"/>
        <result property="sendTime" column="send_at"/>
        <result property="remark" column="remark"/>
        <collection property="items" javaType="java.util.List" resultMap="OrderItemResult"/>
    </resultMap>

    <resultMap id="OrderItemResult" type="OrderItem">
        <id property="id" column="item_id"/>
        <result property="name" column="product_name"/>
        <result property="orderId" column="order_id"/>
        <result property="productId" column="product_id"/>
        <result property="coverUrl" column="cover_url"/>
        <result property="specificationId" column="specification_id"/>
        <result property="firstSpecificationName" column="first_specification_name"/>
        <result property="firstSpecificationValue" column="first_specification_value"/>
        <result property="secondSpecificationName" column="second_specification_name"/>
        <result property="secondSpecificationValue" column="second_specification_value"/>
        <result property="price" column="item_price"/>
        <result property="stockType" column="stock_type"/>
        <result property="originalPrice" column="original_price"/>
        <result property="num" column="num"/>
    </resultMap>

    <insert id="create" parameterType="Order" useGeneratedKeys="true" keyProperty="id">
        insert `gxw_order`  (business_id,business_name,user_id,order_code,price,original_price,express_price,receiver,telphone,province,city,county,address,status,remark)
        value (#{businessId},#{businessName},#{userId},#{code},#{price},#{originalPrice},#{expressPrice},#{receiver},#{telphone},#{province},#{city},#{county},#{address},#{status},#{remark})
    </insert>

    <insert id="createItem" parameterType="OrderItem" useGeneratedKeys="true" keyProperty="id">
        insert `gxw_order_item`  (order_id,
        name,
        product_id,
        cover_url,
        specification_id,
        first_specification_name,
        first_specification_value,
        second_specification_name,
        second_specification_value,
        product_snap,
        price,
        stock_type,
        original_price,
        num)
        value (#{orderId},
        #{name},
        #{productId},
        #{coverUrl},
        #{specificationId},
        #{firstSpecificationName},
        #{firstSpecificationValue},
        #{secondSpecificationName},
        #{secondSpecificationValue},
        #{productSnap},
        #{price},
        #{stockType},
        #{originalPrice},
        #{num})
    </insert>

    <sql id="sqlOrder">
        select a.id,
        a.business_id,
        a.business_name,
        a.user_id,
        a.order_code,
        a.price,
        a.original_price,
        a.express_price,
        a.express_id,
        a.express_code,
        a.receiver,
        a.telphone,
        a.address,
        a.province,
        a.city,
        a.county,
        a.status,
        a.delete_flag,
        a.created_at,
        a.pay_at,
        a.send_at,
        a.remark,
        b.id as item_id,
        b.order_id,
        b.name as product_name,
        b.product_id,
        b.cover_url,
        b.specification_id,
        b.first_specification_name,
        b.first_specification_value,
        b.second_specification_name,
        b.second_specification_value,
        b.price as item_price,
        b.stock_type,
        b.original_price,
        b.num
        from gxw_order a
        left join gxw_order_item b on a.id = b.order_id
    </sql>

    <select id="selectOrders" resultMap="OrderResult">
        <include refid="sqlOrder"/>
        where a.delete_flag = 0
        and a.id in
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by a.created_at desc
    </select>

    <select id="getOrderIds" resultType="Long">
        select id from gxw_order a
        where a.delete_flag = 0
        <if test="id != null and id != 0">and a.id= #{id}</if>
        <if test="code != null and code != ''">and a.order_code= #{code}</if>
        <if test="businessId != null and businessId != 0">and a.business_id= #{businessId}</if>
        <if test="userId != null and userId != 0">and a.user_id= #{userId}</if>
        <if test="telphone != null and telphone != ''">and a.telphone= #{telphone}</if>
        <if test="statuses != null ">
            and a.status in
            <foreach collection="statuses" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by a.created_at desc
    </select>

    <select id="getOrder" resultMap="OrderResult">
        <include refid="sqlOrder"/>
        where a.id = #{id}  <if test="businessId != null">and a.business_id = #{businessId}</if> and a.delete_flag = 0
    </select>

    <update id="update" parameterType="Order">
        update gxw_order
        <set>
            <if test="price != null and price != 0">price= #{price},</if>
            <if test="expressId != null">express_id= #{expressId},</if>
            <if test="expressCode != null and expressCode != ''">express_code= #{expressCode},</if>
            <if test="receiver != null and receiver !='' ">receiver= #{receiver},</if>
            <if test="telphone != null and telphone !='' ">telphone= #{telphone},</if>
            <if test="address != null and address !='' ">address= #{address},</if>
            <if test="province != null and province !='' ">province= #{province},</if>
            <if test="city != null and city !='' ">city= #{city},</if>
            <if test="county != null and county !='' ">county= #{county},</if>
            <if test="status != null ">status= #{status},</if>
            <if test="payTime != null ">pay_at= #{payTime},</if>
            <if test="sendTime != null ">send_at= #{sendTime},</if>
            <if test="remark != null and remark != '' ">remark= #{remark},</if>
            delete_flag = #{deleteFlag}
        </set>
        where id=#{id}
    </update>

    <select id="hasOrderOfUser" resultType="Integer">
        select count(1) from gxw_order a left join gxw_order_item b on  a.id = b.order_id
        where a.id = #{orderId} and a.user_id = #{userId} and b.product_id = #{productId} and a.delete_flag = 0
    </select>

</mapper>