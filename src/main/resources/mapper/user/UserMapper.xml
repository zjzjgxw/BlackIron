<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxw.store.project.user.mapper.UserMapper">
    <resultMap type="User" id="UserResult">
        <id property="id" column="id"/>
        <result property="businessId" column="business_id"/>
        <result property="account" column="account"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="status" column="status"/>
        <result property="email" column="email"/>
        <result property="profileUrl" column="profile_url"/>
        <result property="tel" column="tel"/>
        <result property="openId" column="open_id"/>
        <result property="idolNum" column="idol_num"/>
        <result property="birthday" column="birthday"/>
        <result property="vipFlag" column="vip_flag"/>
        <result property="vipId" column="vip_id"/>
        <result property="point" column="point"/>
        <result property="fansNum" column="fans_num"/>
        <result property="consumePrice" column="consume_price"/>
        <result property="deleteFlag" column="delete_flag"/>
    </resultMap>

    <insert id="create" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert `gxw_user` (business_id,account,password,name,tel,email,profile_url,status,vip_flag
        <if test="birthday != null ">,birthday</if>
        <if test="openId != null and openId != ''">,open_id</if>) value
        (#{businessId}, #{account},#{password},#{name},#{tel},#{email},#{profileUrl},#{status},#{vipFlag}
        <if test="birthday != null ">,birthday</if>
        <if test="openId != null and openId != ''">,#{openId}</if>)
    </insert>

    <sql id="selectUser">
        select a.id,
        a.business_id,
        a.account,
        a.password,
        a.name,
        a.open_id,
        a.birthday,
        a.union_id,
        a.tel,
        a.email,
        a.status,
        a.profile_url,
        a.idol_num,
        a.fans_num,
        a.consume_price,
        a.point,
        a.vip_flag,
        a.vip_id,
        a.delete_flag from `gxw_user` a
    </sql>

    <select id="selectUserByAccount" parameterType="String" resultMap="UserResult">
        <include refid="selectUser"/>
        where account = #{account} and delete_flag = 0
    </select>

    <select id="selectUserByPhone" parameterType="String" resultMap="UserResult">
        <include refid="selectUser"/>
        where tel = #{phone} and delete_flag = 0
    </select>

    <select id="selectUserByEmail" parameterType="String" resultMap="UserResult">
        <include refid="selectUser"/>
        where email = #{email} and delete_flag = 0
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="UserResult">
        <include refid="selectUser"/>
        where id = #{id} and delete_flag = 0
    </select>

    <select id="selectUserByOpenId" parameterType="String" resultMap="UserResult">
        <include refid="selectUser"/>
        where open_id = #{openId}
    </select>

    <select id="getUsers" parameterType="UserSearchParams" resultMap="UserResult">
        <include refid="selectUser"/>
        where a.delete_flag = 0
        <if test="id != null">and a.id= #{id}</if>
        <if test="businessId != null and businessId != 0 ">and a.business_id= #{businessId}</if>
        <if test="account != null and account != ''">and a.account= #{account}</if>
        <if test="name != null and name != ''">and a.name= #{name}</if>
        <if test="tel != null and tel != ''">and a.tel= #{tel}</if>
        <if test="email != null and email != ''">and a.email= #{email}</if>
        <if test="birthday != null ">and a.birthday= #{birthday,jdbcType=DATE} </if>
        <if test="vipId != null and vipId !=0 ">and a.vip_id= #{vipId} </if>
        <if test="status != null">
            and a.status in
            <foreach collection="status" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <update id="updateUser" parameterType="User">
        update gxw_user
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="tel != null and tel != ''">tel = #{tel},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="openId != null and openId != ''">open_id = #{openId},</if>
            <if test="unionId != null and unionId != ''">union_id = #{unionId},</if>
            <if test="birthday != null ">birthday = #{birthday},</if>
            <if test="profileUrl != null and profileUrl != ''">profile_url = #{profileUrl},</if>
            <if test="vipId != null">vip_id = #{vipId},</if>
            <if test="deleteFlag != null and deleteFlag != ''">delete_flag = #{deleteFlag},</if>
        </set>
        where id = #{id}
    </update>


    <select id="getNormalUserNum" resultType="int">
        select count(1) from gxw_user where delete_flag = 0 and id in
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <select id="hasFollowed" resultType="int">
        select count(1) from gxw_idol where user_id = #{userId} and idol_id in
        <foreach collection="idols" item="idolId" open="(" separator="," close=")">
            #{idolId}
        </foreach>
    </select>

    <update id="updateIdolNum">
        update gxw_user set idol_num = idol_num + #{nums} where id = #{userId}
    </update>

    <update id="updateFansNum">
        update gxw_user set fans_num = fans_num + #{nums} where id in
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </update>

    <insert id="addIdols">
        insert gxw_idol (user_id,idol_id) values
        <foreach collection="idols" item="idol_id" separator=",">
            (#{userId},#{idol_id})
        </foreach>
    </insert>

    <insert id="addFans">
        insert gxw_fans (user_id,fans_id) values
        <foreach collection="userIds" item="userId" separator=",">
            (#{userId},#{fansId})
        </foreach>
    </insert>

    <delete id="deleteIdol">
        delete from gxw_idol where user_id = #{userId} and idol_id = #{idolId}
     </delete>

    <delete id="deleteFans">
        delete from gxw_fans where user_id = #{userId} and fans_id = #{fansId}
     </delete>


    <select id="getIdols" parameterType="Long" resultMap="UserResult">
        <include refid="selectUser"/>
        JOIN gxw_idol b ON b.idol_id = a.id
        WHERE
        b.user_id = #{userId}
        AND a.delete_flag = 0 order by b.create_time desc
    </select>

    <select id="getFans" parameterType="Long" resultMap="UserResult">
        <include refid="selectUser"/>
        JOIN gxw_fans b ON b.fans_id = a.id
        WHERE
        b.user_id = #{userId}
        AND a.delete_flag = 0 order by b.create_time desc
    </select>


    <update id="addConsumePrice">
         update gxw_user set consume_price = consume_price + #{price} where id=#{id}
    </update>

    <update id="addPoint">
         update gxw_user set point = point + #{point} where id=#{id}
    </update>

    <insert id="recordLogin">
        insert gxw_user_login_log (user_id,ip) values (#{userId},#{ip})
    </insert>


    <resultMap id="newUserResultMap" type="UserStat">
        <result property="time" column="create_time"/>
        <result property="newNum" column="new_num"/>
    </resultMap>

    <select id="newUserStatDateRange" resultMap="newUserResultMap">
         select count(id) as new_num,a.create_time from gxw_user a where a.business_id = #{businessId}
          and
        (date_format(a.create_time,'%Y-%m-%d')
        BETWEEN
        date_format(#{startTime},'%Y-%m-%d')
        AND date_format(#{endTime},'%Y-%m-%d'))
          GROUP BY TO_DAYS(a.create_time)
    </select>
</mapper> 