<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxw.store.project.user.mapper.StaffMapper">
    <resultMap type="Staff" id="StaffResult">
        <id property="id" column="id"/>
        <result property="businessId" column="business_id"/>
        <result property="account" column="account"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="isAdmin" column="is_admin"/>
        <result property="email" column="email"/>
        <result property="logoImg" column="logo_img"/>
        <result property="status" column="status"/>
        <result property="deleteFlag" column="delete_flag"/>
        <collection property="departments" javaType="java.util.List"
                    resultMap="com.gxw.store.project.user.mapper.common.DepartmentResult"/>
        <collection property="roles" javaType="java.util.List"
                    resultMap="com.gxw.store.project.user.mapper.common.RoleResult" />
    </resultMap>

    <sql id="selectStaff">
        SELECT
	a.id,
	a.business_id,
	a.account,
	a.`password`,
	a.`name`,
	a.email,
	a.logo_img,
	a.`status`,
	a.delete_flag,
	c.id as department_id,
	c.business_id as department_business_id,
	c.name as department_name,
	e.id as role_id,
	e.business_id as role_business_id,
	e.name as role_name
    FROM
	gxw_business_staff a
	LEFT JOIN gxw_business_staff_department_relation b ON a.id = b.business_staff_id
	LEFT JOIN gxw_business_department c ON b.business_department_id = c.id
	Left join gxw_business_staff_role_relation d on a.id = d.business_staff_id
	left join gxw_business_role e on d.business_role_id = e.id
    </sql>

    <insert id="create" parameterType="Staff" useGeneratedKeys="true" keyProperty="id">
        insert `gxw_business_staff`  (business_id,account,password, name, is_admin,email,logo_img,status) value (#{businessId},#{account},#{password},#{name},#{isAdmin},#{email},#{logoImg},#{status})
    </insert>

    <select id="getStaff" parameterType="Long" resultMap="StaffResult">
       <include refid="selectStaff" />
        where a.id = #{id} and a.delete_flag = 0
    </select>

    <select id="getStaffByAccount" parameterType="String" resultMap="StaffResult">
        <include refid="selectStaff" />
        where a.account = #{account} and a.delete_flag = 0
    </select>

    <insert id="addDepartments">
        insert into gxw_business_staff_department_relation(business_staff_id,business_department_id) values
        <foreach item="item" index="index" collection="set" separator=",">
            (#{item.staffId},#{item.departmentId})
        </foreach>
    </insert>

    <insert id="addRoles">
        insert into gxw_business_staff_role_relation(business_staff_id,business_role_id) values
        <foreach item="item" index="index" collection="set" separator=",">
            (#{item.staffId},#{item.roleId})
        </foreach>
    </insert>

    <delete id="deleteDepartments">
        delete from gxw_business_staff_department_relation where
        <foreach collection="set" item="item" separator=" or " index="index">
            (business_staff_id = #{item.staffId} and business_department_id = #{item.departmentId})
        </foreach>
    </delete>

    <delete id="deleteRoles">
        delete from gxw_business_staff_role_relation where
        <foreach collection="set" item="item" separator=" or " index="index">
            (business_staff_id = #{item.staffId} and business_role_id = #{item.roleId})
        </foreach>
    </delete>
</mapper>